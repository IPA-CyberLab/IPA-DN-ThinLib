######################################################################
## NTT 東日本 - IPA シン・テレワークシステムサーバー付属
## 「シン・ファイアウォールシステム」(Thin Firewall System)
## 動作設定ファイル
######################################################################


## この動作設定ファイルの内容は、テキストエディタで編集できます。
## 動作設定ファイルの内容を保存すると、数秒後に自動的に適用されます。
## (SettingReloadIntervalMsec の値で指定されているミリ秒数ごとに
## 動作設定ファイルの内容が自動的にリロードされます。)
## サービス等を再起動する必要はありません。


## =================================================================
## 第 1 章 -- 全体に共通の設定
## 
## シン・ファイアウォールシステム全体の設定セクションです。
## =================================================================


## シン・ファイアウォールシステム機能全体の有効化フラグ。
##  true: 有効、false: 無効
## このフラグを true に設定するまで、一切のシン・ファイアウォールシステムの
## 機能は動作しません。利用を開始するには、false を true に書き換えて
## この動作設定ファイルを保存してください。
## true に設定した後は、シン・ファイアウォールシステムの動作の状況は、
## 「thinfirewall_log」ディレクトリに自動的にログファイルとして出力されます
## ので、当該ログファイルをご確認ください。
## 
## 【解説】★☆ 非常に重要なフラグです。必ず true に変更してください。
## false のままの場合、以下の一切の設定は意味をなしません。
## この値が false の場合、この動作設定ファイルのすべての設定
## は何らの意味も有さなくなります。

Enable                          true


## この動作設定ファイル自身の再読込間隔 (ミリ秒)
## この動作設定ファイルが何ミリ秒ごとに自動再読込されるかを指定
## します。再読込されると、内容がシン・ファイアウォールシステム機能
## に直ちに設定され、動作やルールに反映されます。
## ミリ秒とは、1000 分の 1 秒のことです。たとえば、15000 と指定すると
## 15 秒ごとに 1 回、動作設定ファイルの再読込が実施されることになります。
## 【解説】※ 通常は、デフォルト値のままで問題ありません。

SettingReloadIntervalMsec       15000


## ネットワーク情報検出の時間間隔 (ミリ秒)
## シン・ファイアウォールシステムは、ログにこのコンピュータの MAC アドレス等
## を記載することができます。そのためのネットワーク情報は Windows の API
## を用いて取得します。しかし、その API の呼び出しには若干の CPU 時間
## がかかります。そこで、デフォルトでは 300000 ミリ秒 (300 秒 = 5 分)
## ごとに 1 回だけ API を呼び出します。大抵の環境ではデフォルト値
## のままで問題無いと考えられます。
## 【解説】※ 通常は、デフォルト値のままで問題ありません。

GetNetworkInfoIntervalMsec      300000


## 端末が生きていることを示す "Daily Alive Message" を送付するかどうか
##  true: 有効、false: 無効
## 1 日に 1 回、シン・ファイアウォールシステムが正しく動作している旨
## を示す "Daily Alive Message" をイベントとして生成し、電子メールや
## syslog (本動作設定ファイルで指定している方法) で送付します。
## Daily Alive Message には、シン・ファイアウォールシステムの継続起動時間や
## Windows の継続起動期間等の状態情報が記載されています。
## Windows のバージョンや、空きディスク・空きメモリ容量、ネットワーク
## の通信データ量等の管理上参考になる情報も記載され、大変有益です。
## 多数の端末にシン・ファイアウォールシステムをインストールされて
## 管理されている場合、送付されるメールまたは syslog を集計すれば、
## 各端末が正常に稼働しているかどうかを簡単に確認することが
## できるようになります。
## 【解説】※ 通常は、デフォルト値のままで問題ありません。

EnableDailyAliveMessage         true


## "Daily Alive Message" が毎日 1 回送付される際の送付時刻の指定
## EnableDailyAliveMessage が true の場合に送信される "Daily Alive Message"
## が、毎日何時頃に送信されるかを指定します。
## HHMMSS の形式で数字 6 桁で指定します。例えば、091530 を指定すると、
## 午前 9 時 15 分 30 秒という意味になります。
## デフォルト値 (000000) の場合、午前 0 時ちょうどを意味します。
## なお、指定された時刻に端末がスリープ状態であった場合は、
## 次回スリープから復帰した際に指定した時刻に到達したとみなされます。
## 【解説】※ 通常は、デフォルト値のままで問題ありません。

SendDailyAliveNoticeHhmmss      000000


## =================================================================
## 第 2 章 -- 「ふるまいウォッチ機能」の設定
## 
## シン・ファイアウォールシステムの二大目玉機能のうち 1 つ目は、
## 「ふるまいウォッチ機能」です。Windows や Windows 上で動作している
## すべてのプログラムの挙動を監視し、プロセス起動、終了、
## 通信の発生 (着信、発信)、DNS クエリの発生、
## RDP 接続の着信、イベントログの書き込み等のイベントが発生したら、
## これをログに記録し、電子メールや syslog で管理者にリアルタイム
## で通知することができます。
## =================================================================


## 「ふるまいウォッチ機能」の画面ロック連動機能
##  true: 有効、false: 無効
## 各種のウォッチ機能 (この動作設定ファイルで以下に多数列挙されている、
## プロセス監視や通信監視等の機能) について、コンピュータ画面がロックされている
## (離席時・夜間等) 場合のみ動作を開始し、コンピュータ画面がロックされていない
## (使用されている) 場合には動作を停止することができます。
## その場合は、true に設定してください。
## false を設定すると、ふるまいウォッチ機能が常時動作します。
## (ユーザーモードでシン・ファイアウォールシステムに係るサービスが動作している
##  場合は、コンピュータ画面が一定時間操作されていない場合も含む)
## 
## この機能の意義は、日中アクティブに Windows 上でさまざまな操作をユーザー
## が行なっている際は、色々なプロセスが起動・終了し、様々な通信が飛び交う
## ことは当然なので、その際に大量に発生するログを一々記録メール送信する
## ことを避けることにあります。つまり、PC がロックされているような離席時
## にのみ発生するイベントだけを不審なものと捉えて、そのようなイベント
## のみをメール等で通知したいという場合に、このフラグを true にすると
## 良いのです。
## 
## ヒント: WatchOnlyWhenLocked を false にしたまま、
## ReportSyslogOnlyWhenLocked または ReportMailOnlyWhenLocked (後掲) を
## true にすると、コンピュータがアクティブ時にふるまいウォッチ機能によって
## 検出されたイベントを syslog またはメールで送信しないように設定する
## ことができます。この場合、ふるまいウォッチ機能は常時稼働します
## ので、コンピュータの CPU は若干消費しますが、メールまたは syslog で
## の送信により一々煩わされることを避けることができます。
## 【解説】★ お好みに応じて設定を変更してください。

WatchOnlyWhenLocked             true


## 一定時間画面無操作時に画面ロックと同様とみなすための無操作時間閾値 (ミリ秒)
## ふるまいウォッチ機能の画面ロック連動機能において画面操作の一定時間無操作
## 状態が続くと画面ロックがなされていなくてもロックされている状態と同様
## にみなすことができます。WatchOnlyWhenLocked が true の場合のみ有意です。
## シン・ファイアウォールシステム機能がシステムモードで動作している場合は、
## この値は適用されません。ユーザーモードの場合のみ適用されます。
## 【解説】※ 通常は、デフォルト値のままで問題ありません。

InputIdleTimerMsec              900000


## ふるまいウォッチ機能のウォッチ間隔 (ミリ秒)
## シン・ファイアウォールシステムの各種機能でウォッチを実施する際の動作原理
## は、指定した時間間隔でシステムの状態を確認し、その差分を検出・通知する
## ことにより行なわれます。その間隔を指定します。
## デフォルトは 250 ミリ秒で、この場合、1 秒間に 4 回ウォッチします。
## 間隔を長くすると、CPU 消費時間が減りますが、わずかな時間間隔で起動・終了
## するプロセスの検出等が困難になります。間隔を短くすると、常時 CPU を
## 消費するその消費割合が増加します。
## 【解説】※ 通常は、デフォルト値のままで問題ありません。

WatchPollingIntervalMsec        250


## ふるまいウォッチ機能における「RDP セッション」のウォッチ機能の有効化フラグ
##  true: 有効、false: 無効
## このコンピュータに対する RDP (リモートデスクトップ)
## 接続をウォッチします。(すなわち、RDP の着信的接続を監視対象とします。)
## RDP の接続があったり、接続中のセッションが増減したり、接続元の IP アドレス
## が変化したりすると、検出され、後に設定する方法によって、
## ログファイル、電子メールまたは syslog で通知がなされます。
## 【解説】※ 通常は、デフォルト値のままで問題ありません。

EnableWatchRdp                  true


## ふるまいウォッチ機能における「DNS クエリ発信」のウォッチ機能の有効化フラグ
##  true: 有効、false: 無効
## このコンピュータが DNS サーバーに対して発信する
## DNS クエリ要求 (ただし、DNS 応答があったもの) の発生をウォッチします。
## たとえば、あるプログラムが HTTP 等の TCP 通信を行なうに前置して
## DNS サーバーを用いてドメイン名を IP アドレスに解決しようとすると、
## そのことが検出されます。この仕組みは、次のようになっています。
## すなわち、シン・ファイアウォールシステムは、WatchPollingIntervalMsec ミリ秒
## 間隔で、Windows 内蔵の DNS クライアントに蓄積されるクエリ結果の
## キャッシュを列挙します。キャッシュ内容が増加していたら、いずれかの
## プログラムが DNS クエリを行なったということが判明するので、それを
## 検出して後に設定する方法によってログファイル、電子メールまたは
## syslog で通知することになるのです。
## 制約事項: (a) Windows の通常の DNS 名前解決 API (ソケット API) を用いず
## に行なわれるクエリは追跡されません。(b) Windows の DNS キャッシュ機能
## を無効にしている際のクエリは追跡されません。
## 注意事項: この機能を無効にすると、他の機能の逆引き名前解決において
## 監視対象プログラムが意図したホスト名へのマッピングが行なわれなくなります。
## 【解説】※ 通常は、デフォルト値のままで問題ありません。

EnableWatchDns                  true


## ふるまいウォッチ機能における「TCP/IP 新規接続」のウォッチ機能の有効化フラグ
##  true: 有効、false: 無効
## このコンピュータが、LAN やインターネット上のサーバーコンピュータに
## 対して接続する TCP/IP 接続 (発信接続 = TCP クライアント的通信) と、
## このコンピュータが、LAN やインターネット上のコンピュータから接続を受付ける
## TCP/IP 接続 (着信接続 = TCP サーバー的機能) とを監視し、TCP コネクション
## が増加したら、検出して後に設定する方法によってログファイル、電子メールまたは
## syslog で通知します。
## 可能な場合は、通信を発信または着信したプロセスの情報
## (プロセスの EXE ファイル等) も取得して通知します。
## 【解説】※ 通常は、デフォルト値のままで問題ありません。

EnableWatchTcp                  true


## 「TCP/IP 新規接続」のウォッチにおいて、TCP サーバーコネクションを無視
## するかどうかのフラグ (true: 無視、false: 無視しない)
## 大量にインターネットからの接続が飛来する Web サーバー等の場合は true に
## 設定することでログの量を削減できます。
## 【解説】※ 通常は、デフォルト値のままで問題ありません。

WatchTcpIgnoreServerConnection  false


## IP アドレスとホスト名との対応表を維持するため、常時 DNS クライアント
## キャッシュを監視するかどうか (true: 有効、false: 無効)
## 【解説】※ 通常は、デフォルト値のままで問題ありません。
AlwaysWatchDnsCache             true


## DNS クライアントキャッシュを常時監視する場合の監視間隔 (ミリ秒)
## 【解説】※ 通常は、デフォルト値のままで問題ありません。
WatchDnsCacheIntervalMsec       15000


## ふるまいウォッチ機能における「TCP/IP および UDP/IP の通信遮断通知」
## のウォッチ機能の有効化フラグ
##  true: 有効、false: 無効
## 「EnableFirewall」(後述) が有効な場合など、このコンピュータの
## ファイアウォール機能が有効なときで、ルールに基づきブロックされるべき通信を
## 実際にこのコンピュータ上のプログラムが発信・着信しようとしたとき、
## その通信内容の詳細と、そのような禁止されている通信を発着信しようとした
## プロセスの情報 (プロセスの EXE ファイル等) を取得して通知します。
## 制約事項: シン・ファイアウォールシステムのプロセスがシステムサービス
## として管理者権限で動作している場合のみ稼働します。それ以外の場合は
## 本機能は稼働しません。
## 【解説】※ 通常は、デフォルト値のままで問題ありません。

EnableWatchFwBlock              true


## ふるまいウォッチ機能で検出される TCP や UDP 通信のホスト名の逆引きの実施
## フラグ (true: 有効、false: 無効)
## 逆引きを無効にすると、IP アドレスのみが通知メールやログ等に記録され、
## 一瞥してどのような通信か分かりにくくなります。
## しかし、逆引きにはそれ用に DNS 通信が発生し、また時間も要するという
## デメリットがあるため、大量の通信がある場合には無効にしたほうが良いかも
## 知れません。
## 【解説】※ 通常は、デフォルト値のままで問題ありません。

EnableTcpHostnameLookup         true


## EnableTcpHostnameLookup が true の場合の逆引きタイムアウト値 (ミリ秒)
## 短くすると、逆引きにしばしば失敗する場合の処理時間が短縮されます。
## しかし、DNS サーバー等での逆引きにある程度の時間を要しているとき
## に、早期に諦めてしまうことになります。
## 【解説】※ 通常は、デフォルト値のままで問題ありません。

HostnameLookupTimeoutMsec       500


## ふるまいウォッチ機能で検出される TCP 通信において、DNS over TCP
## (TCP 宛先ポート 53) の通信を無視するかどうかのフラグ
##  true: 有効、false: 無効
## 最近の Web ブラウザは、DNS over TCP を使用する場合があります。
## この値を true に設定した場合、DNS over TCP の通信を一々通知
## しないようになります。デメリットとして、宛先ポートが 53 の TCP
## 通信が通知されなくなるため、マルウェア等の通信がその条件に
## 合致している場合のその通信の検出ができなくなります。
## 【解説】※ 通常は、デフォルト値のままで問題ありません。

IgnoreDNSoverTCPSession         true


## ふるまいウォッチ機能における「プロセス起動・終了」の
## ウォッチ機能の有効化フラグ (true: 有効、false: 無効)
## プロセスが起動・終了した場合に、そのプロセスの名前や詳細情報
## を取得して、後に設定する方法によってログファイル、電子メールまたは
## syslog で通知します。
## 制約事項: シン・ファイアウォールシステムのプロセスがシステムサービス
## として管理者権限で動作している場合は、すべてのユーザーのプロセスの増減
## を検出可能です。そうでない場合は、自らのユーザーのプロセスのみを検出
## 可能です。
## 【解説】※ 通常は、デフォルト値のままで問題ありません。

EnableWatchProcess              true


## EnableWatchProcess が true の場合において、プロセスの詳細情報
## のうち、プロセスの起動引数 (コマンドライン文字列) も取得対象とするか
## 否かのフラグ。これを true とした場合、たとえば、エクスプローラ
## でドキュメントのアイコンをダブルクリックして起動するプロセスの
## コマンドライン文字列には、そのドキュメントのファイル名が含まれている
## 可能性が高いため、そのような情報も取得できます。
## ただし、デメリットとして、ドキュメントのファイル名やその他
## のコマンドライン文字列に秘密情報 (個人情報、パスワード等) が
## 含まれている場合、記録・通知先のログファイルやメールアドレス、
## syslog サーバー宛に、その文字列を送付してしまい、メールサーバー
## の管理者等 (たとえば、Gmail に送付する場合、米国 Google LLC 社の役員
## や従業員) がその情報に理論上アクセスできてしまうという問題があります。
## そのため、これを true にするか false にするかは、十分に検討する
## 必要があります。
## 【解説】※ 通常は、デフォルト値のままで問題ありません。

IncludeProcessCommandLine       true


## ふるまいウォッチ機能における「Windows サービスおよびカーネルドライバ」
## の起動・終了のウォッチ機能の有効化フラグ
##  true: 有効、false: 無効
## Windows 上で動作しているバックグラウンドサービスやカーネルモードドライバ
## の起動・終了をウォッチします。
## 【解説】※ 通常は、デフォルト値のままで問題ありません。

EnableWatchService              true


## ふるまいウォッチ機能における「Windows ファイル共有機能」へのアクセス
## の検知の有効化フラグ
##  true: 有効、false: 無効
## Windows ファイル共有機能に他のコンピュータからリモート接続があった
## 場合の動作状況をウォッチします。
## 制約事項: シン・ファイアウォールシステムのプロセスがシステムサービス
## として管理者権限で動作している場合は、ファイルやフォルダへのアクセス
## を記録可能です。それ以外の場合は、ファイル共有接続のセッションの
## 開始と終了のみを記録可能です。
## 【解説】※ 通常は、デフォルト値のままで問題ありません。

EnableWatchFileShare            true


## EnableWatchFileShare が true の場合、ファイルアクセスログを
## Syslog で送信したくない場合は、true に設定してください:

ReportSyslogNoFileShareAccessLog        false


## EnableWatchFileShare が true の場合、ファイルアクセスログを
## ローカルファイルのログに保存したくない場合は、true に設定してください:

ReportSaveToDirNoFileShareAccessLog     false


## ふるまいウォッチ機能における「Windows イベントログ」のウォッチ機能の
## 有効化フラグ
##  true: 有効、false: 無効
## 有効にすると、Windows イベントログが定期的に検査され、増加したイベントログ
## が、後に設定する方法によってログファイル、電子メールまたは syslog で
## 通知されるようになります。
## 注意事項: WatchOnlyWhenLocked が true の場合でも、画面ロック時以外の
## アクティブ時においても、Windows イベントログは、常にウォッチの対象と
## なります。
## 【解説】※ 通常は、デフォルト値のままで問題ありません。

EnableWatchWindowsEventLog      true


## Windows イベントログのウォッチ間隔 (ミリ秒)
## Windows イベントログのウォッチ間隔は、WatchPollingIntervalMsec とは別に
## 以下の設定値で設定をします。通常は 10000 ミリ秒 (10 秒) 間隔で問題
## ないと思います。
## 【解説】※ 通常は、デフォルト値のままで問題ありません。

WindowsEventLogPollIntervalMsec 10000


## ウォッチ対象の Windows イベントログの一覧 (セミコロン ';' で区切る)
## デフォルトの設定の場合、システムログ、アプリケーションログ、
## Windows Defender ウイルス対策の動作ログの 3 つがウォッチされます。
## 増加、減少させることもできます。
## 【解説】※ 通常は、デフォルト値のままで問題ありません。

WindowsEventLogNames            System;Application;Microsoft-Windows-Windows Defender/Operational




## =================================================================
## 第 3 章 -- 監視結果のリアルタイムでの電子メールや syslog 送付
## 
## 「ふるまいウォッチ機能」で検出されたイベントを、リアルタイム
## で電子メールや syslog で管理者に送付することができます。
## 
## 電子メールの送付先は、普段利用している会社や個人のメールアドレス
## でも良いですが、専用のメールアドレスを作成することも良い方法です。
## 
## たとえば、外国系 IT 企業等が無償または安価提供している
## メールアドレスを 1 つ取得・作成し、そこにイベントをどんどん送付
## することができます。大量のイベントが蓄積されても、メールを後から
## 瞬時に必要に応じて全文検索することができます。
## 
## 複数の社内の Windows コンピュータを管理されるシステム管理者が
## シン・ファイアウォールシステム機能を複数の端末にインストール
## される場合にも、1 つのメールアドレスに全部ログを送付する
## ということが可能です。メールにはホスト名や MAC アドレス等の
## 情報が記録されていますので、全文検索を行なうことで、後から
## 特定日時の特定の 1 台のコンピュータのログを抽出することが
## 可能です。また、特定のインターネット上のホストと通信をしたり
## 特定のプロセス名を有するプロセスが起動したりしたログを全部
## のコンピュータのログから検索することも可能です。
## 
## このように、大容量・全文検索が可能なメールアドレスを用いる
## ことにより、高価なログ基盤ストレージやクラウド型ログ分析サービス
## を導入することなく、ほとんどのアーカイブ目的と事後的なログの検索
## を実現することができるようになります。もともとテキストメール
## を高速に検索することを想定しこれに特化した外国企業の高速大容量の
## メールサービスを、本来は大変コストがかかるログの全文検索用
## データストアの代用品として、無償または極めて安価で利用してログ管理
## を行なうというアイデアは、本来想定されていた手法以上の価値を
## これらの大規模メールサービスに生じさせ、これらのメールサービスの
## 価値と、ユーザーの得る価値の両方を、大幅に向上させます。
## =================================================================


#### 3.1 - メール送信機能

## メールで送付する場合は、以下の設定を行なってください。
## (ReportMailTo がコメントアウトされていますので、そのコメントアウト
##  を解除してください。コメントアウトされた状態では、メールは送付
##  されません。)


## 宛先メールアドレス (複数指定したい場合は、スペースで区切って複数指定可能)
## 【解説】★ お使いのメールアドレスを入力してください。
##            (メール送信のためには、コメントアウトを解除する必要があります。)

$MAIL_ADDR_LINE$


## 送信元メールアドレス
## 最初から設定されているメールアドレスは動作確認のサンプル用である。
## 自分のメールアドレスに変更すること。
## (送信元と宛先が同じでも、大抵の場合、問題はない)
## 【解説】★ お使いのメールアドレスを入力してください。
##         ※ ただし、サンプルの SMTP サーバーを使用して実験する場合は、
##            初期値のままにしてください。

ReportMailFrom                  example@example-smtp.thintele-oss.arpanet.jp


## コンピュータ画面がアクティブな際にふるまいウォッチ機能によって
## 検出されたイベントについて、メールで送信をしないように送信を遮断するフラグ
## true: 有効 (画面ロック時のイベントのみメールで送信)
## false: 無効 (すべてのイベントをメールで送信)
## この項目を true にすると、WatchOnlyWhenLocked (上掲) が false の場合でも
## コンピュータ画面がロックされていない場合 (アクティブな場合) に発生する
## イベントはメールで送付されません (Windows イベントログのイベントを除く)。
## 一定時間画面無操作時に画面ロックと同様とみなすための無操作時間閾値 (ミリ秒)
## として InputIdleTimerMsec (上掲) の値が設定されている場合は、その値も
## 適用されます。
## なお、WatchOnlyWhenLocked (上掲) が true の場合は、コンピュータ画面がロック
## されていない場合 (アクティブな場合) は、そもそもイベントがウォッチされま
## せんので、このフラグには意味がありません。
## 【解説】★ お好みに応じて設定を変更してください。

ReportMailOnlyWhenLocked        false


## メールの件名
## 変数 $hostname の部分はコンピュータ名に置換される。
## 変数 $macaddress と書くと、その部分は MAC アドレスに置換される。
## 変数 $mailid と書くと、その部分はメール連番数字に置換される。
## 【解説】※ 通常は、デフォルト値のままで問題ありません。

ReportMailSubjectPrefix         [ThinFirewall: $hostname #$mailid]


## 複数のイベントが立て続けに発生した際に、ある程度の秒数 (ミリ秒単位で
## 指定する) のイベントをまとめて 1 つのメールに合体させて送付し、
## メールの数通を削減するための設定。まとめる秒数をミリ秒で指定します。
## (コメントアウトするか、0 を指定すると、まとめることなく、
##  1 つのイベントで必ず 1 通のメールが送付される。メールの件数が膨大
##  となり、海外系大手クラウドメールサーバーに SPAM と誤解されて
##  遮断されてしまうか、レートリミットに検知されてメール受信数の制限を
##  受けるリスクが高まります。)
## 【解説】※ 通常は、デフォルト値のままで問題ありません。

ReportMailIntervalMsec          60000


## 上記の「ReportMailIntervalMsec」でメールをまとめる設定としている
## 場合でも、「ReportMailMaxSize」で指定したサイズ (単位: バイト) を
## 超えた時点でそこまでの情報を 1 通のメールとして送付します。
## デフォルトは 200 キロバイトです。
## この値をあまりに大きな値にし過ぎると、届くメールが大きくなり、
## 文字数が増え、表示に時間を要します。小さな値にし過ぎると、大量の
## イベントが発生する際に、メールが細切れに送付されることになります。
## 【解説】※ 通常は、デフォルト値のままで問題ありません。

ReportMailMaxSize               200000


## SMTP サーバーにおける何らかのエラーでメールの送信に失敗した場合
## 何秒間かメール送信試行を休止することができる。その秒数をミリ秒単位
## で指定します。
## 【解説】※ 通常は、デフォルト値のままで問題ありません。

ReportMailFailSleepIntervalMsec 60000


## 使用する送信 SMTP サーバーのホスト名 (LAN 上やインターネット上のメール
## サーバーを指定してください)
## 注意: デフォルトで smtp01.example-smtp.thintele-oss.arpanet.jp という
## メールサーバーが記載されています。これは、開発者である登がサンプル目的
## で立ち上げている本システム用の送信専用 SMTP サーバーであり、動作は保証
## されていません。
## 必ず、お使いの ISP や社内システムやクラウドサービスの SMTP 送信用
## メールサーバーを指定してください。
## IP アドレスでも指定可能です。プライベート IP も指定可能です。
## 
## 著名なクラウド型メールサービスにおける SMTP の設定値は、以下を
## 参考にしてください。ただし、以下のクラウドサービス側の SMTP サーバー
## の実装が将来変更されたときにも、永続的に利用できることを保証する
## ものではありません。クラウドサービスや ISP の SMTP サーバーで
## あるとき突然に不具合が発生するようになった場合は、それらの
## SMTP サーバー管理者による設定や実装の変更が原因である可能性
## が高いため、SMTP サーバー管理者にお問い合わせください。
## 
## 米国 Google 社の 「Gmail」 を使用する場合:
## https://support.google.com/mail/answer/7126229?hl=ja
## ※ アプリ用のログインパスワードを生成する必要があります。
## 
## 米国 Microsoft 社の 「Office 365 (Hotmail, Outlook)」 を使用する場合:
## https://docs.microsoft.com/ja-jp/exchange/mail-flow-best-practices/how-to-set-up-a-multifunction-device-or-application-to-send-email-using-microsoft-365-or-office-365
## 
## 【解説】★ 必ず、お使いの SMTP サーバーの情報を設定してください。
##         ※ ただし、サンプルの SMTP サーバーを使用して実験する場合は、
##            初期値のままにしてください。その場合は、上掲の ReportMailFrom の
##            値も初期値のままにしてください。

ReportMailHost                  smtp01.example-smtp.thintele-oss.arpanet.jp


## 使用する送信 SMTP サーバーのポート番号
## SMTP の伝統的なポート番号は 25 ですが、送信専用 SMTP サーバーのポート番号
## は 587 である場合があり、SMTPS (TCP 接続時から SSL で暗号化する) の
## ポート番号は 465 である場合があります。詳しくはお使いの SMTP サーバー
## の管理者が公開している案内をご参照ください。
## 【解説】★ 必ず、お使いの SMTP サーバーの情報を設定してください。
##         ※ ただし、サンプルの SMTP サーバーを使用して実験する場合は、
##            初期値のままにしてください。

ReportMailPort                  587


## 送信する送信 SMTP サーバーでユーザー認証を必要とする場合はその
## ユーザー名とパスワード (ユーザー認証不要な場合はコメントアウトするか
## 空欄を設定してください)
## 注意: ユーザー認証等でエラーが発生した場合は、シン・ファイアウォール
## システム機能のログファイルでその原因が記録されていますので、ログ
## ファイルを確認してください。メールがうまく届かない場合は、たいてい
## SMTP サーバーの設定に誤りがあります。
## 【解説】★ 必ず、お使いの SMTP サーバーの情報を設定してください。
##         ※ ただし、サンプルの SMTP サーバーを使用して実験する場合は、
##            初期値のままにしてください。

ReportMailUsername              example
ReportMailPassword              example


## SMTP 接続時の SSL/TLS 暗号化の有無およびその種類を 0, 1 または 2 で
## 指定します。0 は SSL/TLS なし、1 は SMTPS 暗号化 (TCP 接続後、
## すぐに SSL ネゴシエーションを実施する)、2 は STARTTLS 方式の暗号化
## (TCP 接続後、SMTP プロトコル上で STARTTLS コマンドを実行して
## SSL ネゴシエーションを実施する) を意味します。
## 一部の SMTP サーバーは、SSL/TLS なしの場合は、ユーザー認証を門前
## 払いして拒否する設定になっている場合がありますのでそのような場合
## は SSL/TLS を有効にしてください。多くの SMTP サーバーは STARTTLS
## 方式の暗号化に対応していますが、SMTPS 暗号化にしか対応していない
## ケースも存在します。
## 【解説】★ 必ず、お使いの SMTP サーバーの情報を設定してください。
##         ※ ただし、サンプルの SMTP サーバーを使用して実験する場合は、
##            初期値のままにしてください。

ReportMailSslType               2


## SMTP 認証の種類を 0 または 1 で指定します。
## 0 は LOGIN 認証、1 は PLAIN 認証を意味します。
## 【解説】★ 必ず、お使いの SMTP サーバーの情報を設定してください。
##         ※ ただし、サンプルの SMTP サーバーを使用して実験する場合は、
##            初期値のままにしてください。

ReportMailAuthType              0


#### 3.2 - syslog 送信機能
## (ReportSyslogHost がコメントアウトされていますので、そのコメントアウト
##  を解除してください。コメントアウトされた状態では、syslog は送付
##  されません。)


## 送信先 syslog サーバーの IP アドレスまたはホスト名
## 【解説】★ お好みに応じて設定を変更してください。
##            (syslog 送信のためには、コメントアウトを解除する必要があります。)

#ReportSyslogHost                192.168.0.1


## 送信先 syslog サーバーのポート番号
## 【解説】★ お好みに応じて設定を変更してください。

ReportSyslogPort                514


## コンピュータ画面がアクティブな際にふるまいウォッチ機能によって
## 検出されたイベントについて、syslog で送信をしないように送信を遮断するフラグ
## true: 有効 (画面ロック時のイベントのみ syslog で送信)
## false: 無効 (すべてのイベントを syslog で送信)
## この項目を true にすると、WatchOnlyWhenLocked (上掲) が false の場合でも
## コンピュータ画面がロックされていない場合 (アクティブな場合) に発生する
## イベントは syslog で送付されません (Windows イベントログのイベントを除く)。
## 一定時間画面無操作時に画面ロックと同様とみなすための無操作時間閾値 (ミリ秒)
## として InputIdleTimerMsec (上掲) の値が設定されている場合は、その値も
## 適用されます。
## なお、WatchOnlyWhenLocked (上掲) が true の場合は、コンピュータ画面がロック
## されていない場合 (アクティブな場合) は、そもそもイベントがウォッチされま
## せんので、このフラグには意味がありません。
## 【解説】★ お好みに応じて設定を変更してください。

ReportSyslogOnlyWhenLocked      false


## syslog 送付時のフォーマット (行の先頭部分の文字列)
## 変数 $hostname の部分はコンピュータ名に置換される。
## 変数 $macaddress と書くと、その部分は MAC アドレスに置換される。
## 変数 $username と書くと、その部分はユーザー名に置換される。
## 変数 $eventid と書くと、その部分はイベント ID (連番) に置換される。
## 【解説】※ 通常は、デフォルト値のままで問題ありません。

ReportSyslogPrefix              $hostname:$macaddress:$username ThinFirewall: Event #$eventid:


#### 3.3 - ローカル HDD へのログ保存機能

## 「thinfirewall_log」というディレクトリにイベントを保存する
##  true: 有効、false: 無効
## ディスク容量に空きがない場合は、古いログは自動的に削除されます。
## 【解説】※ 通常は、デフォルト値のままで問題ありません。
##            ただし、ローカルディスク容量を消費しますのでご注意ください。

ReportSaveToDir                 true


#### 3.4 - ログの処理や保存に関する詳細設定

## 時刻にタイムゾーン情報を含めるか否かのフラグ
## (true: 有効、false: 無効)
## 【解説】★ お好みに応じて設定を変更してください。

ReportAppendTimeZone            false


## ログ情報にユーザー名を含めるか否かのフラグ
## (true: 有効、false: 無効)
## 【解説】★ お好みに応じて設定を変更してください。

ReportAppendUserName            true


## ユニーク ID の付与機能 (true: 有効、false: 無効)
## すべてのログ行に 20 バイト (40 文字) の 16 進数のユニークな ID
## (乱数文字列) を付与する。大量のイベントを全文検索可能なメール
## サーバーや syslog サーバーに保存してあるとき、特に重要な
## イベントを後で取り出したり、同一のメールボックスやストレージ
## を共有している仲間のシステム管理者に Slack 等で指し示したり
## その際に、ID だけを渡せば、相手もその ID を検索してその特定
## のログ 1 行を抽出することができるようになる。
## ただし、ログの行の文字数が毎回少し増加するので、
## 容量を余分に消費することになる。
## 【解説】★ お好みに応じて設定を変更してください。

ReportAppendUniqueId            false


## 内部的な非同期キューの長さ (デフォルト: 1024)
## 【解説】※ 通常は、デフォルト値のままで問題ありません。

ReportMaxQueueLength            1024


## シン・ファイアウォールシステムそのものの動作途中状態に関する
## イベントも送付するか否かのフラグ (true: 有効、false: 無効)
## 【解説】※ 通常は、デフォルト値のままで問題ありません。

ReportSendEngineEvent           true





## =================================================================
## 第 4 章 -- 「ロックダウン・ファイアウォール機能」の設定
## 
## シン・ファイアウォールシステムの二大目玉機能のうち 2 つ目は、
## 「ロックダウン・ファイアウォール機能」です。
## 
## これは、画面がロックされた (または一定時間無操作の) 場合、つまり
## ユーザーが離席、帰社、就寝中などの大半の時間において、
## Windows 上のシステムプロセスやアプリケーションが任意の通信を
## 発信／着信することを規制します。画面ロックが解除される等、
## ユーザーがアクティブな状態に戻ると、通信を許可します。
## このように、ユーザーがコンピュータを実際に使用中か否かで動的
## にファイアウォールを切り替えることができるため、
## 端末がロックまたはアイドル状態において原則としてすべてのアプリ
## ケーションや Windows システムそのものの通信を一切禁止するという
## 設定も可能です。
## 
## これにより、Windows のシステムそのものや Windows 上のアプリの
## いずれかに通信にまつわる脆弱性があったり、マルウェア等に感染
## していたりしても、Windows 端末が利用されていない時 (大半の時間)
## に一切の通信 (発信通信も含む) が禁止され、脆弱性を突く攻撃
## に対して高い耐性を実現することが可能となり、C&C サーバーとの通信
## をもすべて切断することが可能で、攻撃者は遠隔操作等が不可能または
## 著しく困難になります。
## 
## また、画面ロック等の状態にかかわらず、常時ファイアウォール機能
## を有効にすることも可能です。Windows ファイアウォール等の
## 他のファイアウォールと重ねて動作することができ、最も厳しい遮断
## 条件が適用されます。Windows ファイアウォールは着信方向の通信
## を遮断するために利用されることが多いですが、たいてい、色々な
## アプリケーションや Windows そのものがユーザーに無断で例外
## ルールを追加してしまっており、脆弱性を突かれるリスクがあまり
## 下がりません。また、Windows ファイアウォールは、社内 LAN 等
## でグループポリシーが設定されていると、一律「無効」(すべて許可)
## になっているケースもよくあります。これは、大企業のネットワーク
## によく見られます。
## 
## そこで、「ロックダウン・ファイアウォール機能」で
## より厳しいパケットフィルタを設定すれば、そのようなさまざまな
## 境遇の Windows コンピュータを、かなり安全・確実に保護する
## ことができます。
## 
## さらに、発信方向の通信の遮断も簡単にできます。マルウェア等
## の発信方向の C&C サーバーとの通信を遮断することができ、
## 攻撃に遭うリスクをかなり軽減することができます。
## 
## そして、遮断の対象となる通信がいよいよ発生した場合は、
## その詳しい状況を、上述のふるまいウォッチ機能における
## 「TCP/IP および UDP/IP の通信遮断通知」機能で管理者に通知する
## ことも可能です。これにより、管理者は疑わしいアプリを把握
## することができます。
## 
## 「ロックダウン・ファイアウォール機能」のファイアウォールルールは、
## 整然とした 1 行 1 ルールの行の集合でテキスト形式できれいに記述可能
## です。サブネットマスクやポート番号の範囲も記載できます。
## Linux の iptables 等のルールに近い形で記述ができます。
## 「Windows ファイアウォール」の設定は複雑となりがちですが、
## 「ロックダウン・ファイアウォール機能」のルールはシンプルなテキスト
## ファイルであり、配布も適用も簡単です。
## =================================================================


## 「ロックダウン・ファイアウォール機能」の有効化フラグ。
##  true: 有効、false: 無効
## 制約事項: シン・ファイアウォールシステムのプロセスがシステムサービス
## として管理者権限で動作している場合のみ稼働します。それ以外の場合は
## 本機能は稼働しません。
## 
## 【解説】★ お好みに応じて設定を変更してください。
## 「ロックダウン・ファイアウォール機能」を無効化する場合は false、
## 有効化する場合は true に設定してください。
## この値が false の場合、この動作設定ファイルのここより下の部分の設定
## は何らの意味も有さなくなります。

EnableFirewall                  true


## 「ロックダウン・ファイアウォール機能」の画面ロック連動機能
##  true: 有効、false: 無効
## ロックダウン・ファイアウォール機能について、コンピュータ画面がロック
## されている (離席時・夜間等) 場合のみ動作を開始し (通信を遮断し)
## コンピュータ画面がロックされていない( 使用されている) 場合には
## 動作を停止する (通信を遮断しないようにする) ことができます。
## その場合は、true に設定してください。
## false を設定すると、「ロックダウン・ファイアウォール機能」機能が
## 常時動作します。
## (ユーザーモードでシン・ファイアウォールシステムに係るサービスが動作している
##  場合は、コンピュータ画面が一定時間操作されていない場合も含む)
## 
## この機能の利点は、普通のクライアント端末 PC (デスクトップ PC、ノート PC)
## において、ユーザーが何らかの作業をしている場合は特に通信を規制せず、
## ユーザーが画面をロックした後の離席中、退社後、夜間においては
## (例外をのぞいて) すべての通信を規制することが簡単にできるという点
## にあります。これにより、Windows 端末のセキュリティが飛躍的に向上します。
## 脆弱性を突かれる可能性がある外部からの通信や、脆弱性を発動するトリガー
## となり得る端末上のアプリケーションや Windows システムの通信
## (例: アップデート通信) 等を遮断できるためです。
## 【解説】★ お好みに応じて設定を変更してください。

EnableFirewallOnlyWhenLocked    true




## 「ロックダウン・ファイアウォール機能」の詳細の説明
# ロック発動中における通信を規制する。Windows システム上で稼働している
# 他のすべてのファイアウォールと協調して動作する。他のファイアウォール
# によって deny される通信を許容することはない。他方、本ファイアウォール
# で deny された通信は、他のファイアウォールが permit していても破棄
# される。(すなわち、許可は他のファイアウォールとの AND, 拒絶は OR)
# 
# ロック発動時においてすでに確立されているコネクションを引き続き通信許容
# するか、または、直ちに切断するかを選択できる。
# 
# TCP, UDP, ICMP のヘッダ部に係るステートフルパケットインスペクション
# 機能を有している (ペイロードまでは検査しない)。UDP, ICMP については、
# 60 秒の無通信タイムアウトまでは、コネクション性を認識する。


## ファイアウォールルールの優先順位について
# このファイアウォールルール一覧は、常に、上から順に解釈される。
# 上から順に走査し、一番最初に該当するルールの Action (deny / permit) が
# 適用される。


## ファイアウォールルールの書式について
# Protocol: tcp, udp, icmp のいずれか
# Direction: in または out のいずれか
# Type: new または all のいずれか
#       new: 新しいコネクションの確立要求パケットに対して適用されるルール
#       all: 新しいコネクションの確立要求パケットと、
#            ロック発動時の時点ですでに確立済みのコネクションの
#            通信パケットの両方に対して適用されるルール
#  ※ ここでいう「コネクション」の概念の詳解:
#     TCP: 通常の TCP コネクションと同一の概念である。
#     UDP および ICMP: ステートフルパケットインスペクションを実施すること
#                      により、コネクションの概念を形成する。
#                      送信元/宛先 IP, ポート (ICMP の場合はコード等) の
#                      組み合わせによって 1 本のコネクションが識別される。
#                      タイムアウト値は 60 秒であり、60 秒以内に全く通信
#                      がなされないコネクションは切断されたものとみなす。
# Action: permit または deny のいずれか
#  ※ deny は Windows システム上で必ず強制的に適用される。
#        他のファイアウォールが permit していても、無視され、
#        必ず deny が適用される。
#     permit は Windows システム上で他のファイアウォールが deny を
#        行なわない限り適用される。他のファイアウォールのルールにおける
#        deny を上書きすることはない。
# RemoteIP: 8.8.8.0/24 または 2401:1234::/16 のように IPv4 または IPv6 の
#     サブネット長形式で表記する。ただし、スラッシュ / の指定がなければ、
#     単一ホスト (IPv4: サブネット長 24, IPv6: サブネット長 128) と
#     みなされる。IPv4 については、伝統的サブネットマスク形式
#     (例: 10.0.0.0/255.0.0.0) でも記載可能である。
#     下記の特別文字列が存在する。
#     any4: 0.0.0.0/0 (すべての IPv4 アドレス) を意味する。
#     any6: ::/0 (すべての IPv6 アドレス) を意味する。
# RemotePort: 通信相手のホスト側の 1 つのポート、または、ポート番号範囲を
#     記載する。Protocol が icmp の場合は、省略可能である。
#     1 つのポート記載: 443 のように、整数を 1 つ記載する。
#     ポート番号範囲: 135-139 のように、ハイフンで区切って整数を 2 つ
#                     指定する。
#     * を指定すると、1-65535 (すべてのポート) を意味する。
# LocalPort: 自ホスト側の 1 つのポート、または、ポート番号範囲を記載する。
#     Protocol が icmp の場合は、省略可能である。LocalPort と同じ。


## その他の注意事項
# (1) 本ファイアウォールは、本システムそのものの通信には、適用されない。
#     したがって、本システムで syslog または SMTP メール送信機能を利用
#     する場合、明示的な許可は不要である。ただし、DNS 名前解決が必要
#     な場合は、別途 DNS の UDP 通信を明示的に許可する必要がある。
#     (本サンプルファイルでは、DNS の UDP 通信を明示的に許可している。
#      下部の例外 1.3 (1), 1.4 (1) を参照すること。)
# (2) 本ファイアウォールは、Windows システムのファイアウォールルール
#     を変更／上書きすることはない。メモリ上で動作し、本システムが停止
#     したり、ロックが解除されたりすると、メモリ上から消去される。


## ファイアウォール書式:
## Protocol Direction  Type  Action  RemoteIP        RemotePort   LocalPort


## ----------------------------------------------------------------------
## 第 0.1 部: 例外許可の設定 (信頼されているプログラム)
## 'trusted_client' または 'trusted_client' に続いて
## EXE ファイルのフルパスを記入すると、
## そのプログラムは信頼されているプログラムとみなし、
## ファイアウォールルールを適用しない。
## 
## trusted_client: 当該プロセスからの TCP および UDP 通信の発信を許可する。
##                 (クライアントとして振る舞うことを許可する。)
## trusted_server: 当該プロセスにおける TCP および UDP 通信の着信を許可する。
##                 (サーバーとして振る舞うことを許可する。)

# Windows の重要なシステムサービス群
# (Windows Update、AD ドメインログオン、クラウド ID 認証、ライセンス認証
#  等の通信に必要)
trusted_client C:\Windows\System32\svchost.exe
trusted_client C:\Windows\System32\sppsvc.exe
trusted_client C:\Windows\System32\sppextcomobj.exe
trusted_client C:\Windows\System32\lsass.exe
trusted_client C:\windows\System32\smartscreen.exe
trusted_client C:\Windows\System32\backgroundTaskHost.exe
trusted_client C:\Windows\System32\pacjsworker.exe
trusted_client C:\Windows\System32\dfsrs.exe
trusted_client C:\Program Files\Windows Defender\MpCmdRun.exe

# Zscaler 社のゼロトラスト製品のトンネル通信サービス
# (著名な VPN クライアントアプリであるため、サンプルとして記載。
#  削除しても差し支え無い。)
trusted_client C:\Program Files\Zscaler\ZSATunnel\ZSATunnel.exe
trusted_client C:\Program Files (x86)\Zscaler\ZSATunnel\ZSATunnel.exe


## ----------------------------------------------------------------------
## 第 0.2 部: 例外許可の設定 (発信方向)
## (このコンピュータが IPv4 TCP/UDP クライアントとなり、ネットワーク上の
##  他のホストに対して接続される IPv4 TCP/UDP コネクションの通信に関する
##  例外的許可)
##
## ロック発動後は、ロック中は原則としてすべての TCP, UDP の発信通信が
## 規制されるが、社内システム等に対する必要的・定期的通信が阻害される
## と、運用管理上の不具合が発生する場合がある。
## たとえば、アップデートサーバーや動作設定ファイル配布サーバーとの通信、
## WSUS (Windows Server Update Services) サーバーとの通信、
## 定期的なバックアップのためのバックアップファイルサーバーとの通信、
## 定期的なワークフロー、バッチ等の処理や結果のメール送信、
## Active Directory サーバーとの通信、ログの送付処理等である。
## 
## そこで、ロック発動後も自由な通信を許容したい通信相手の IP アドレス
## やサブネット、ポート番号等のルールを明示的に記載することにより、
## 例外として、それらへの発信通信を常時許容することが可能である。
## 
## なお、DHCP、DNS、syslog の許容ルールは、本ルールファイルの下部のほう
## で別途規定されているので、ここで規定する必要はない。
##
## シン・ファイアウォール機能の下記の多数のルール群による詳細な
## 許可／規制ルールよりも優先して適用される許可ルールを、明示的にここで
## 記載することが推奨される。
## (前述のとおり、ルールは上から順に適用されるため。)
## 
## 以下の例外許可ルールは、コメントアウトされている。実際に利用する場合
## は、コメントアウトを解除し、自由に編集すること。接続先ポート範囲を
## さらに限定することも可能である。

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
## デフォルトの動作設定ファイルに最初からいくつかの例外が記載されています。
## (必要に応じて削除しても差し支えありません。ただし、シン・テレワーク
##  システムと併用している場合、シン・テレワークシステムが動作しなくなる
##  可能性があります。)
# シン・テレワークシステム (パブリック版) の中継 GW となる可能性がある IP 帯
tcp          out        all   permit  103.41.60.0/22   443         *
tcp          out        all   permit  202.222.12.0/22  443         *
tcp          out        all   permit  219.100.36.0/22  443         *
tcp          out        all   permit  202.247.128.0/22 443         *
tcp          out        all   permit  103.95.184.0/22  443         *
tcp          out        all   permit  219.100.92.0/22  443         *
tcp          out        all   permit  163.220.192.0/19 443         *
tcp          out        all   permit  163.220.224.0/20 443         *
tcp          out        all   permit  163.220.240.0/21 443         *
tcp          out        all   permit  163.220.248.0/22 443         *
tcp          out        all   permit  130.158.6.0/24   443         *
tcp          out        all   permit  130.158.75.32/27 443         *
tcp          out        all   permit  202.222.5.0/24   443         *
tcp          out        all   permit  202.222.6.0/24   443         *
tcp          out        all   permit  202.222.7.0/24   443         *
tcp          out        all   permit  202.247.128.0/22 443         *
# 自治体テレワークシステム for LGWAN の中継 GW となる可能性がある IP 帯
tcp          out        all   permit  61.205.16.0/20   443         *
tcp          out        all   permit  61.212.0.0/16    443         *

## 以下に必要に応じて通信を許可する例外を追加してください
#tcp         out        all   permit  192.168.99.0/24 443          *
#udp         out        all   permit  192.168.99.0/24 1234-5678    *
#tcp         out        all   permit  2001:1234::/64  443          *
#udp         out        all   permit  2001:1234::/64  1234-5678    *


## ----------------------------------------------------------------------
## 第 0.3 部: 例外許可の設定 (着信方向)
## (このコンピュータが IPv4 TCP/UDP サーバーとなり、ネットワーク上の
##  他のホストから接続される IPv4 TCP/UDP コネクションの通信に関する
##  例外的許可)
##
## ロック発動後は、ロック中は原則としてすべての TCP, UDP の着信通信が
## 規制されるが、社内システム等に対する必要的・定期的通信が阻害される
## と、運用管理上の不具合が発生する場合がある。
## 
## 以下のような場合が想定される。
## (1) システム管理部門社員が、限定されたシステム管理用サブネットから、
##     本ホストに対して、管理上の正当な目的で、任意のプロトコルで
##     アクセスしたい場合。
## (2) 本ホスト上でサーバーアプリケーション (例: Web サーバー、
##     DB サーバー、ファイル共有サーバー等) を稼働させており、
##     そのサービスは、ロック中でも、特定のクライアントまたは任意の
##     クライアントに対して提供し続けたい場合。
## 
## そこで、ロック発動後も自由な通信を許容したい通信相手の IP アドレス
## やサブネット、ポート番号等のルールを明示的に記載することにより、
## 例外として、それらからの着信通信を常時許容することが可能である。
## 
## なお、RDP の許容ルールは、本ルールファイルの下部のほうで別途規定
## されているので、ここで規定する必要はない。
##
## シン・ファイアウォール機能の下記の多数のルール群による詳細な
## 許可／規制ルールよりも優先して適用される許可ルールを、明示的にここで
## 記載することが推奨される。
## (前述のとおり、ルールは上から順に適用されるため。)
## 
## 以下の例外許可ルールは、コメントアウトされている。実際に利用する場合
## は、コメントアウトを解除し、自由に編集すること。接続先ポート範囲を
## さらに限定することも可能である。

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
#tcp         in         all   permit  192.168.99.0/24 *            8888
#udp         in         all   permit  192.168.99.0/24 *            1234-5678
#tcp         in         all   permit  2001:1234::/64  *            443
#udp         in         all   permit  2001:1234::/64  *            1234-5678


## ----------------------------------------------------------------------
## 第 1.1 部: 発信方向の IPv4 TCP パケットに対する通信規制
## (このコンピュータが IPv4 TCP クライアントとなり、ネットワーク上の
##  他のホストに対して接続される IPv4 TCP コネクションの通信に関する規制)


# 例外 1.1 (1) - 発信方向の IPv4 TCP パケットに対する通信規制の例外の定義
# IPv4 の SSH クライアント (宛先: TCP ポート 22)
# ロック発動前にすでに確立されていた接続のみ継続通信を可能とする。
# ロック発動後には、ロック解除まで、新たな接続の確立は禁止される。
# (画面ロック時に毎回接続済みセッションが切れると、大変不便であるため。)
# ※ 許容先 IPv4 アドレスを限定したい場合は、permit の any4 の部分を
#    任意のサブネットに変更すればよい。複数行 permit を書くことも
#    できる。明示的に permit をしなかった場合は、下のほうの行で
#    キャッチオール deny が適用される。)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
tcp         out        new   deny    any4            22           *
tcp         out        all   permit  any4            22           *


# 例外 1.1 (2) - 発信方向の IPv4 TCP パケットに対する通信規制の例外の定義
# IPv4 の RDP クライアント (宛先: TCP ポート $RDP_PORT$)
# ロック発動前にすでに確立されていた接続のみ継続通信を可能とする。
# ロック発動後には、ロック解除まで、新たな接続の確立は禁止される。
# (画面ロック時に毎回接続済みセッションが切れると、大変不便であるため。)
# ※ 許容先 IPv4 アドレスを限定したい場合は、permit の any4 の部分を
#    任意のサブネットに変更すればよい。複数行 permit を書くことも
#    できる。明示的に permit をしなかった場合は、下のほうの行で
#    キャッチオール deny が適用される。)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
tcp         out        new   deny    any4            $RDP_PORT$         *
tcp         out        all   permit  any4            $RDP_PORT$         *


# 例外 1.1 (3) - 発信方向の IPv4 TCP パケットに対する通信規制の例外の定義
# IPv4 の Windows ファイル共有プロトコル (宛先: TCP ポート 139, 445)
# ロック発動前にすでに確立されていた接続のみ継続通信を可能とする。
# (ただし、LAN 上のプライベート IPv4 アドレスのサーバーとの通信のみ許容)
# ロック発動後には、ロック解除まで、新たな接続の確立は禁止される。
# (画面ロック時に毎回共有サーバーのマウントが解除されると、
#  共有フォルダ上のファイルを開きっぱなしにしている
#  Office アプリケーションの状態がおかしくなり、大変不便であるため。)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
tcp         out        new   deny    any4            139          *
tcp         out        all   permit  10.0.0.0/8      139          *
tcp         out        all   permit  172.16.0.0/12   139          *
tcp         out        all   permit  192.168.0.0/16  139          *
tcp         out        all   permit  100.64.0.0/10   139          *

tcp         out        new   deny    any4            445          *
tcp         out        all   permit  10.0.0.0/8      445          *
tcp         out        all   permit  172.16.0.0/12   445          *
tcp         out        all   permit  192.168.0.0/16  445          *
tcp         out        all   permit  100.64.0.0/10   445          *


# 例外 1.1 (4) - 発信方向の IPv4 TCP パケットに対する通信規制の例外の定義
# IPv4 の iSCSI クライアント (宛先: TCP ポート 3260)
# Windows の iSCSI クライアント (イニシエータ) 機能を用いて LAN 内の
# NAS 等との通信を利用している場合、その通信を切断してしまわないよう
# に例外許可ルールに追加する。プライベート IPv4 アドレス宛の通信のみ
# 許可する。(通常、iSCSI はプライベート IPv4 でのみ利用するため)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
tcp         out        all   permit  10.0.0.0/8      3260         *
tcp         out        all   permit  172.16.0.0/12   3260         *
tcp         out        all   permit  192.168.0.0/16  3260         *
tcp         out        all   permit  100.64.0.0/10   3260         *


# 原則 1.1 - 発信方向の IPv4 TCP パケットに対する通信規制の定義
# キャッチオール deny の定義
# 上記の例外のいずれにも該当しない発信方向の IPv4 TCP パケット
# は、すべて以下の行で通信が遮断される (確立済み／未確立の両方を完全遮断)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
tcp         out        all   deny    any4            *            *


## ----------------------------------------------------------------------
## 第 1.2 部: 発信方向の IPv6 TCP パケットに対する通信規制
## (このコンピュータが IPv6 TCP クライアントとなり、ネットワーク上の
##  他のホストに対して接続される IPv4 TCP コネクションの通信に関する規制)


# 例外 1.2 (1) - 発信方向の IPv6 TCP パケットに対する通信規制の例外の定義
# IPv6 の SSH クライアント (宛先: TCP ポート 22)
# ロック発動前にすでに確立されていた接続のみ継続通信を可能とする。
# ロック発動後には、ロック解除まで、新たな接続の確立は禁止される。
# (画面ロック時に毎回接続済みセッションが切れると、大変不便であるため。)
# ※ 許容先 IPv6 アドレスを限定したい場合は、permit の any6 の部分を
#    任意のサブネットに変更すればよい。複数行 permit を書くことも
#    できる。明示的に permit をしなかった場合は、下のほうの行で
#    キャッチオール deny が適用される。)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
tcp         out        new   deny    any6            22           *
tcp         out        all   permit  any6            22           *


# 例外 1.2 (2) - 発信方向の IPv6 TCP パケットに対する通信規制の例外の定義
# IPv6 の RDP クライアント (宛先: TCP ポート $RDP_PORT$)
# ロック発動前にすでに確立されていた接続のみ継続通信を可能とする。
# ロック発動後には、ロック解除まで、新たな接続の確立は禁止される。
# (画面ロック時に毎回接続済みセッションが切れると、大変不便であるため。)
# ※ 許容先 IPv6 アドレスを限定したい場合は、permit の any6 の部分を
#    任意のサブネットに変更すればよい。複数行 permit を書くことも
#    できる。明示的に permit をしなかった場合は、下のほうの行で
#    キャッチオール deny が適用される。)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
tcp         out        new   deny    any6            $RDP_PORT$         *
tcp         out        all   permit  any6            $RDP_PORT$         *


# 原則 1.2 - 発信方向の IPv6 TCP パケットに対する通信規制の原則の定義
# キャッチオール deny の定義
# 上記の例外のいずれにも該当しない発信方向の IPv6 TCP パケット
# は、すべて以下の行で通信が遮断される (確立済み／未確立の両方を完全遮断)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
tcp         out        all   deny    any6            *            *


## ----------------------------------------------------------------------
## 第 1.3 部: 発信方向の IPv4 UDP パケットに対する通信規制
## (このコンピュータが IPv4 UDP クライアントとなり、ネットワーク上の
##  他のホストに対して接続される IPv4 UDP コネクションの通信に関する規制)


# 例外 1.3 (1) 以下の IPv4 UDP 通信の発信を特別に許容する
# ・ IPv4 の DNS クライアント    (宛先: UDP ポート 53)
# ・ IPv4 の DHCP クライアント   (宛先: UDP ポート 67)
# ・ IPv4 の NTP クライアント    (宛先: UDP ポート 123)
# ・ IPv4 の syslog クライアント (宛先: UDP ポート 514)
# ・ IPv4 の RDP クライアント    (宛先: UDP ポート $RDP_PORT$)
#    ※ 最近の Windows では、RDP 通信について、UDP が利用可能な場合は
#       TCP と併用して高速化を図っている。その通信が切れないように
#       するため。
# ※ 許容先 IPv4 アドレスを限定したい場合は、permit の any4 の部分を
#    任意のサブネットに変更すればよい。複数行 permit を書くことも
#    できる。明示的に permit をしなかった場合は、下のほうの行で
#    キャッチオール deny が適用される。)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
udp         out        all   permit  any4            53           *
udp         out        all   permit  any4            67           *
udp         out        all   permit  any4            123          *
udp         out        all   permit  any4            514          *
udp         out        all   permit  any4            $RDP_PORT$         *


# 原則 1.3 - 発信方向の IPv4 UDP パケットに対する通信規制の原則の定義
# キャッチオール deny の定義
# 上記の例外のいずれにも該当しない発信方向の IPv4 UDP パケット
# は、すべて以下の行で通信が遮断される (確立済み／未確立の両方を完全遮断)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
udp         out        all   deny    any4            *            *


## ----------------------------------------------------------------------
## 第 1.4 部: 発信方向の IPv6 UDP パケットに対する通信規制
## (このコンピュータが IPv6 UDP クライアントとなり、ネットワーク上の
##  他のホストに対して接続される IPv6 UDP コネクションの通信に関する規制)


# 例外 1.4 (1) 以下の IPv6 UDP 通信の発信を特別に許容する
# ・ IPv6 の DNS クライアント  (宛先: UDP ポート 53)
# ・ IPv6 の DHCP クライアント (宛先: UDP ポート 547)
# ・ IPv6 の NTP クライアント (宛先: UDP ポート 123)
# ・ IPv6 の syslog クライアント (宛先: UDP ポート 514)
# ・ IPv6 の RDP クライアント  (宛先: UDP ポート $RDP_PORT$)
#    ※ 最近の Windows では、RDP 通信について、UDP が利用可能な場合は
#       TCP と併用して高速化を図っている。その通信が切れないように
#       するため。
# ※ 許容先 IPv6 アドレスを限定したい場合は、permit の any6 の部分を
#    任意のサブネットに変更すればよい。複数行 permit を書くことも
#    できる。明示的に permit をしなかった場合は、下のほうの行で
#    キャッチオール deny が適用される。)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
udp         out        all   permit  any6            53           *
udp         out        all   permit  any6            547          *
udp         out        all   permit  any6            123          *
udp         out        all   permit  any6            514          *
udp         out        all   permit  any6            $RDP_PORT$         *


# 原則 1.4 - 発信方向の IPv6 UDP パケットに対する通信規制の原則の定義
# キャッチオール deny の定義
# 上記の例外のいずれにも該当しない発信方向の IPv4 UDP パケット
# は、すべて以下の行で通信が遮断される (確立済み／未確立の両方を完全遮断)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
udp         out        all   deny    any6            *            *



## ----------------------------------------------------------------------
## 第 2.1 部: 着信方向の IPv4 TCP パケットに対する通信規制
## (このコンピュータが IPv4 TCP サーバーとなり、ネットワーク上の他のホスト
##  がクライアントとなり、このコンピュータに対して接続される
##  IPv4 TCP コネクションの通信に関する規制)


# 例外 2.1 (1) - 着信方向の IPv4 TCP パケットに対する通信規制の例外の定義
# IPv4 の RDP サーバー (宛先: TCP ポート $RDP_PORT$)
# ロック発動後であっても、RDP クライアントの接続は許容する。
# ※ 許容元 IPv4 アドレスを限定したい場合は、permit の any4 の部分を
#    任意のサブネットに変更すればよい。複数行 permit を書くことも
#    できる。明示的に permit をしなかった場合は、下のほうの行で
#    キャッチオール deny が適用される。)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
tcp         in         all   permit  any4            *            $RDP_PORT$


# 例外 2.1 (2) - 着信方向の IPv4 TCP パケットに対する通信規制の例外の定義
# IPv4 の Windows ファイル共有プロトコル (宛先: TCP ポート 139, 445)
# ロック発動前にすでに確立されていた接続のみ継続通信を可能とする。
# (ただし、LAN 上のプライベート IPv4 アドレスのクライアントとの通信のみ許容)
# ロック発動後には、ロック解除まで、新たな接続の確立は禁止される。
# (画面ロック時に毎回共有サーバーのマウントが解除されると、
#  本 PC の共有フォルダ上のファイルを開きっぱなしにしている他 PC の
#  ユーザーが突然切断され、Office アプリケーションの状態がおかしくなり、
#  大変不便であるため。)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
tcp         in         new   deny    any4            *            139
tcp         in         all   permit  10.0.0.0/8      *            139
tcp         in         all   permit  172.16.0.0/12   *            139
tcp         in         all   permit  192.168.0.0/16  *            139
tcp         in         all   permit  100.64.0.0/10   *            139

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
tcp         in         new   deny    any4            *            445
tcp         in         all   permit  10.0.0.0/8      *            445
tcp         in         all   permit  172.16.0.0/12   *            445
tcp         in         all   permit  192.168.0.0/16  *            445
tcp         in         all   permit  100.64.0.0/10   *            445


# 原則 2.1 - 着信方向の IPv4 TCP パケットに対する通信規制の原則の定義
# キャッチオール deny の定義
# 上記の例外のいずれにも該当しない発信方向の IPv4 TCP パケット
# は、すべて以下の行で通信が遮断される (確立済み／未確立の両方を完全遮断)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
tcp         in         all   deny    any4            *            *


## ----------------------------------------------------------------------
## 第 2.2 部: 着信方向の IPv6 TCP パケットに対する通信規制
## (このコンピュータが IPv6 TCP サーバーとなり、ネットワーク上の他のホスト
##  がクライアントとなり、このコンピュータに対して接続される
##  IPv6 TCP コネクションの通信に関する規制)


# 例外 2.2 (1) - 着信方向の IPv6 TCP パケットに対する通信規制の例外の定義
# IPv6 の RDP サーバー (宛先: TCP ポート $RDP_PORT$)
# ロック発動後であっても、RDP クライアントの接続は許容する。
# ※ 許容元 IPv6 アドレスを限定したい場合は、permit の any6 の部分を
#    任意のサブネットに変更すればよい。複数行 permit を書くことも
#    できる。明示的に permit をしなかった場合は、下のほうの行で
#    キャッチオール deny が適用される。)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
tcp         in         all   permit  any6            *            $RDP_PORT$


# 原則 2.2 - 着信方向の IPv6 TCP パケットに対する通信規制の原則の定義
# キャッチオール deny の定義
# 上記の例外のいずれにも該当しない発信方向の IPv6 TCP パケット
# は、すべて以下の行で通信が遮断される (確立済み／未確立の両方を完全遮断)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
tcp         in         all   deny    any6            *            *


## ----------------------------------------------------------------------
## 第 2.3 部: 着信方向の IPv4 UDP パケットに対する通信規制
## (このコンピュータが IPv4 UDP サーバーとなり、ネットワーク上の他のホスト
##  がクライアントとなり、このコンピュータに対して接続される
##  IPv4 UDP コネクションの通信に関する規制)

# 例外 2.3 (1) - 着信方向の IPv4 UDP パケットに対する通信規制の例外の定義
# IPv4 の RDP サーバー (宛先: UDP ポート $RDP_PORT$)
# IPv4 の SNMP サーバー (宛先: UDP ポート 161)
# ロック発動後であっても、RDP クライアントの接続は許容する。
#    ※ 最近の Windows では、RDP 通信について、UDP が利用可能な場合は
#       TCP と併用して高速化を図っている。その通信を許容するのである。
# ※ 許容元 IPv4 アドレスを限定したい場合は、permit の any4 の部分を
#    任意のサブネットに変更すればよい。複数行 permit を書くことも
#    できる。明示的に permit をしなかった場合は、下のほうの行で
#    キャッチオール deny が適用される。)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
udp         in         all   permit  any4            *            $RDP_PORT$
udp         in         all   permit  any4            *            161


# 原則 2.3 - 着信方向の IPv4 UDP パケットに対する通信規制の原則の定義
# キャッチオール deny の定義
# 上記の例外のいずれにも該当しない発信方向の IPv4 UDP パケット
# は、すべて以下の行で通信が遮断される (確立済み／未確立の両方を完全遮断)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
udp         in         all   deny    any4            *            *


## ----------------------------------------------------------------------
## 第 2.4 部: 着信方向の IPv6 UDP パケットに対する通信規制
## (このコンピュータが IPv6 UDP サーバーとなり、ネットワーク上の他のホスト
##  がクライアントとなり、このコンピュータに対して接続される
##  IPv6 UDP コネクションの通信に関する規制)

# 例外 2.4 (1) - 着信方向の IPv6 UDP パケットに対する通信規制の例外の定義
# IPv6 の RDP サーバー (宛先: UDP ポート $RDP_PORT$)
# IPv6 の SNMP サーバー (宛先: UDP ポート 161)
# ロック発動後であっても、RDP クライアントの接続は許容する。
#    ※ 最近の Windows では、RDP 通信について、UDP が利用可能な場合は
#       TCP と併用して高速化を図っている。その通信を許容するのである。
# ※ 許容元 IPv6 アドレスを限定したい場合は、permit の any6 の部分を
#    任意のサブネットに変更すればよい。複数行 permit を書くことも
#    できる。明示的に permit をしなかった場合は、下のほうの行で
#    キャッチオール deny が適用される。)

# Protocol  Direction  Type  Action  RemoteIP        RemotePort   LocalPort
udp         in         all   permit  any6            *            $RDP_PORT$
udp         in         all   permit  any6            *            161


# 原則 2.4 - 着信方向の IPv6 UDP パケットに対する通信規制の原則の定義
# キャッチオール deny の定義
# 上記の例外のいずれにも該当しない発信方向の IPv6 UDP パケット
# は、すべて以下の行で通信が遮断される (確立済み／未確立の両方を完全遮断)

udp         in         all   deny    any6            *            *


## ----------------------------------------------------------------------
## 第 3 部: 発信・着信方向の IPv4 ICMP, IPv6 ICMP パケットに対する通信規制

# 以下のデフォルトルールでは、IPv4. IPv6 の ICMP は、特に規制を行なわない。
# ここで明示的に permit されていても、Windows やサードパーティの
# ファイアウォールシステムで ICMP に関する細かい規制ルールが制定されている
# 場合は、それらが優先されるので、セキュリティを弱めるおそれはない。
# (本システムのファイアウォールにおける permit 指定よりも、併存する
#  他のファイアウォールシステムによる deny 指定が優先されるため。)
#
# なお、IPv6 の ICMP について明示的に規制を行なうと、IPv6 ND, RA プロトコル
# の通信を阻害するので、注意が必要である。

icmp        in         all   permit  any4
icmp        in         all   permit  any6

icmp        out        all   permit  any4
icmp        out        all   permit  any6








## =================================================================
## 第 5 章 -- 動作設定ファイルの HTTP 経由の自動更新機能の設定
## 
## 大量のホストにシン・ファイアウォールシステムをインストールして
## 管理している場合に、動作設定ファイルの内容を一括して置換する
## ために、HTTP/HTTPS ベースの配信サーバーを構築することができます。
## 配信サーバーを構築した場合、予め EnableConfigAutoUpdate を true
## にした上で ConfigAutoUpdateUrl で URL を指定した状態の動作
## 設定ファイルを各ホストに書き込んでおくと、各ホストは、一定間隔
## の頻度で最新の動作設定ファイルを更新チェックし、新しく
## なっていた場合はダウンロードしてローカルの動作設定ファイル
## に上書きした上で、これをリロードして適用します。
## 
## 動作設定ファイルを配信するための HTTP/HTTP サーバーは、
## 極めて簡素で一般的な Apache や Nginx、IIS 等の Web サーバーを
## 用いて構築可能です。既存のイントラネットサーバーに動作設定
## ファイル配布機能を併存させることも可能です。以下で解説している
## 機能を活用すれば、端末ごとに異なる動作設定ファイルを振り分け
## て配信することも簡単に実現可能です。
## 
## 注意点: 動作設定ファイルの新しい版をダウンロードすると、
## すぐにローカルの設定ファイルをすべて上書きします。
## そのため、Web サーバーで配信する新しい動作設定ファイルに
## おいても、EnableConfigAutoUpdate が true に設定されている必要
## があり、ConfigAutoUpdateUrl 等の設定項目が記載されている必要
## があります。そのようにしなければ、動作設定ファイルは初回 1 度
## しか更新されず、2 回目以降に更新することができなくなってしまい
## ます。
## =================================================================

## 動作設定ファイルの HTTP/HTTPS 経由の自動更新機能の有効フラグ
##  true: 有効、false: 無効
## この項目を有効にすると、動作設定ファイルを定期的に指定した HTTP サーバー
## からダウンロードし、変更点がある場合は自動的にローカルの
## 動作設定ファイルに上書きし、その内容をリロードして適用します。
## 【解説】★ お好みに応じて設定を変更してください。

EnableConfigAutoUpdate          false


## 動作設定ファイルの HTTP/HTTPS 経由の更新チェックおよび頻度 (ミリ秒)
## ミリ秒とは、1000 分の 1 秒のことです。たとえば、3600000 と指定すると
## 3600 秒 (1 時間) ごとに 1 回、HTTP 経由の更新チェックが実施されます。
## なお、HTTP 経由の更新チェックの動作状況や発生したエラー原因は、
## シン・ファイアウォールシステムのログファイルに記録されます。
## 正常に更新がなされない場合は、ログファイルをチェックしてみてください。
## 値が指定されていない場合は、デフォルト値として、3600 秒が使用されます。
## 【解説】※ 通常は、デフォルト値のままで問題ありません。

ConfigAutoUpdateIntervalMsec    3600000


## 動作設定ファイルの HTTP/HTTPS 経由の更新チェック先の URL
## ここで指定した URL に対してアクセスが行なわれます。
## URL は、http または https のアドレスが指定可能です。
## 【解説】★ 自動更新機能を利用する際には、必ず設定を行なってください。
##            初期状態の example.org は例であり、このままでは意味はありません。

ConfigAutoUpdateUrl             https://example.org/thinfw-policy/policy.txt?hostname=$hostname&macaddress=$macaddress&build=$build&app=$app&mode=$mode


## 【README: ConfigAutoUpdateUrl に関する高度な管理者のためのヒント】
## URL 上に任意の CGI プログラムを置いて置くと、クライアント端末ごとに
## 異なる動作設定ファイルを応答したり、動的にその内容を生成したり
## することも可能です。たとえば、サーバー用にはサーバー用のファイアウォール
## ルールを、クライアント端末用にはクライアント用のファイアウォールルールを
## 配信することも可能です。
## そのため、HTTP の URL の一部 (Query String 部分等) に変数を埋め込むこと
## ができます。変数は、次のものが存在します。
## $hostname -- 端末の Windows コンピュータ名です。
## $macaddress -- 端末の主要な通信に利用される MAC アドレス文字列です。
## $build -- シン・ファイアウォールシステムのビルド番号です。
## $app -- シン・ファイアウォールシステムのソフトウェア名です。
## $mode -- シン・ファイアウォールシステムの動作モードです。
##          0: システムモード (サービスとして動作)、1: ユーザーモード


## HTTP/HTTPS で ConfigAutoUpdateUrl の URL にアクセスする際に
## BASIC ユーザー認証を必要とする場合のユーザー名の指定
## (空欄の場合、BASIC 認証なし)
## 【解説】★ 必要に応じて設定を変更してください。

ConfigAutoUpdateAuthUsername    


## HTTP/HTTPS で ConfigAutoUpdateUrl の URL にアクセスする際に
## BASIC ユーザー認証を必要とする場合のパスワード名の指定
## (空欄の場合、BASIC 認証なし)
## 【解説】★ 必要に応じて設定を変更してください。

ConfigAutoUpdateAuthPassword    


## HTTPS で ConfigAutoUpdateUrl の URL にアクセスする際において
## サーバーで自己署名証明書を使用している場合について、
## サーバー証明書を検証する場合で、サーバー証明書 (X.509) の SHA1
## ハッシュ文字列を検証したい場合は、SHA1 ハッシュ文字列
## (空欄の場合は、証明書検証なし)
## インターネット上に HTTPS サーバーを設置し、中間者攻撃を受ける可能性
## が高い場合 (例: 外国のインターネット回線等を経由する) は、利用する
## ことを推奨。LAN や信頼できる WAN の場合は、一般的には、設定不要。
## 【解説】★ 必要に応じて設定を変更してください。

ConfigAutoUpdateServerCertSha1  


## <README> 制約事項
## 1. Windows XP, Windows Vista, Windows Server 2008 では、
## ファイアウォール機能が動作しません。ファイアウォール機能は、
## Windows 7, 8, 10, 11, Windows Server 2008 R2, 2012, 2016, 2019, 2022
## またはそれ以降でのみ動作します。
## また、本プログラムのプロセスがシステムサービス (システム特権) として
## 動作していない場合は、ファイアウォール機能は動作しません。
## 2. ふるまいウォッチ機能は、定期的なサンプリング間隔 (間隔は設定可能)
## ごとにシステムの状態を確認し、その前回からの差分を検出する仕組みで
## 動作しています。そのため、2 回の間隔の間における短時間の変化は検出
## できない場合があります。
## 3. Syslog やメールでのログの送信機能や、ローカルディスクへのログ
## の保存機能は、多数のログが発生したり、または、ネットワークの状態
## が不安定な場合は、取りこぼしが発生する可能性があります。
## 4. Windows の起動後、本プログラムのプロセスが開始するまでの間
## は、本機能は動作しません。ファイアウォールも設定されません。
## また、何らかの原因で本プログラムのプロセスの起動に失敗したり、
## プロセスの動作が停止したりした場合は、本機能は停止し、本機能によって
## 設定されたファイアウォールも解除されます。
## 5. Windows XP, Vista, 7, Server 2003, Server 2008, Server 2008 R2
## では、画面ロック状態の検出機能に制約があります。
## ローカル画面がログオン状態、または、RDP 接続が接続されており
## ログオン状態の場合は、画面がロックされていないものとみなされます。
## これは、これらの古いバージョンの Windows の Win32 API の機能不足
## による制限事項です。
## 6. 本機能の各セキュリティ機能の動作は、常に完全に動作することは保証
## されていません。



## 大変お疲れ様でした。
## 
## 以下の定型文字列は、この動作設定ファイルの最後に記載したまま
## 残してください。
## この文字列が含まれていない場合、動作設定ファイルの読み込みは
## 行なわれません。
## (動作設定ファイルのコピー中やダウンロード中の中途半端な状態で
##  動作設定ファイルのリロードが発生した場合に、内容を無視する
##  ための仕組みです。)
## なお、「EnableConfigAutoUpdate」の説明で上述した動作設定
## ファイルの配信サーバーを用いる場合も、配信するファイルには必ず
## 以下の定型文字列を記載してください。以下の定型文字列が記載されて
## いないファイルが取得された場合は、無視され、動作設定ファイル
## の更新は実施されません。
## 
## 糸冬了！！

[END_OF_FILE]


